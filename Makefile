.PHONY: clean coverage diff_cover help js js-watch quality selfcheck test validate

.DEFAULT_GOAL := help

# PROJECT_ROOT is usually '/edx/src/cohort-manager/' on an Open edX devstack
PROJECT_ROOT := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

define BROWSER_PYSCRIPT
import os, webbrowser, sys
try:
	from urllib import pathname2url
except:
	from urllib.request import pathname2url

webbrowser.open("file://" + pathname2url(os.path.abspath(sys.argv[1])))
endef
export BROWSER_PYSCRIPT
BROWSER := python -c "$$BROWSER_PYSCRIPT"

help: ## display this help message
	@echo "Please use \`make <target>' where <target> is one of"
	@perl -nle'print $& if m{^[a-zA-Z_-]+:.*?## .*$$}' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m  %-25s\033[0m %s\n", $$1, $$2}'

clean: ## remove generated byte code, coverage reports, and build artifacts
	find $(PROJECT_ROOT) -name '__pycache__' -exec rm -rf {} +
	find $(PROJECT_ROOT) -name '*.pyc' -exec rm -f {} +
	find $(PROJECT_ROOT) -name '*.pyo' -exec rm -f {} +
	find $(PROJECT_ROOT) -name '*~' -exec rm -f {} +
	cd $(PROJECT_ROOT) && coverage erase
	rm -fr $(PROJECT_ROOT)build/
	rm -fr $(PROJECT_ROOT)dist/
	# Do not delete the .egg-info because it will uninstall the entry point
	# and thus unregister the plugin.
	# rm -fr $(PROJECT_ROOT)*.egg-info

coverage: clean ## generate and view HTML coverage report
	pytest --cov-report html
	$(BROWSER) htmlcov/index.html

js:  ## Compile javascript
	./node_modules/.bin/tsc
	sed -i '1s/^/((define) => {/' cohort_manager/js-dist/cohort-manager.js && echo '}).call(this, define || RequireJS.define);' >> cohort_manager/js-dist/cohort-manager.js

quality: ## check coding style with pycodestyle and pylint
	pylint cohort_manager $(PROJECT_ROOT)setup.py
	pylint --py3k cohort_manager $(PROJECT_ROOT)setup.py
	pycodestyle $(PROJECT_ROOT)cohort_manager $(PROJECT_ROOT)setup.py
	isort --check-only --diff --recursive $(PROJECT_ROOT)cohort_manager $(PROJECT_ROOT)setup.py

# requirements: ## install development environment requirements
# 	pip install -qr requirements/pip-tools.txt
# 	pip-sync requirements/dev.txt requirements/private.*

# test target:
# Meant to be run in LMS's virtualenv
# We don't use tox because we need to test with the real installation of
# Open edX and whatever dependencies it uses.
# We use no-cov and nomigrations because they _really_ speed up the test run.
test: clean  ## Run tests; run this from the lms-shell
	python -m pytest --ds=lms.envs.test --no-cov --nomigrations $(PROJECT_ROOT)cohort_manager/tests/

diff_cover: test ## find diff lines that need test coverage
	diff-cover coverage.xml

validate: quality test ## run tests and quality checks

selfcheck: ## check that the Makefile is well-formed
	@echo "The Makefile is well-formed."
